#!/usr/bin/env python3
import collections

import mwapi
import mwbot
import vowi
import mwparserfromhell

site = mwbot.getsite()

class LVADaten:
	NAME = 'LVA-Daten'
	MIN = 1
	MAX = 1
	PARAMS = set((
	'abteilung',
	'vortragende',
	'ects',
	'tiss',
	'homepage',
	'zuordnungen',
	'sprache',
	'veraltet',
	'nachfolger',
	'wann'))

def check_template(code, spec):
	templates = code.filter_templates(matches = lambda t: t.name.matches(spec.NAME))
	if hasattr(spec, 'MIN') and len(templates) < spec.MIN:
		yield 'less than {} of the {} template'.format(spec.MIN, spec.NAME)
	if hasattr(spec, 'MAX') and len(templates) < spec.MAX:
		yield 'more than {} of the {} template'.format(spec.MAX, spec.NAME)
	for template in templates:
		unknown = set([str(p.name).strip() for p in templates[0].params])- spec.PARAMS
		if unknown:
			yield 'unknown parameters for {} template: {}'.format(spec.NAME, ', '.join(sorted(unknown)))

errors = collections.defaultdict(list)

for page in site.query('pages', generator='categorymembers', gcmtitle='Category:LVAs',
		gcmnamespace=mwapi.join(vowi.UNI_NAMESPACES), prop='revisions', rvprop='content', gcmlimit='max'):
	code = mwparserfromhell.parse(page['revisions'][0]['*'])
	for error in check_template(code, LVADaten):
		errors[error].append(page['title'])

report = 'Generated by ~~~~\n'


report += '== LVA-Daten ==\n'
for error in sorted(errors):
	report += '* {}\n'.format(error)
	for page in sorted(errors[error]):
		report += '*# [[{}]]\n'.format(page)

mwbot.edit(site, 'VoWi:Report', report, 'update')
