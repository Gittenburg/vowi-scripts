#!/usr/bin/env python3
import collections

import mwapi
import mwbot
import vowi
import mwparserfromhell

site = mwbot.getsite()

class LVADaten:
	NAME = 'LVA-Daten'
	MIN = 1
	MAX = 1
	PARAMS = set((
	'abteilung',
	'ects',
	'homepage',
	'nachfolger',
	'sprache',
	'tiss',
	'veraltet',
	'vortragende',
	'wann',
	'zuordnungen'
	))

class AbteilungDaten:
	NAME = 'Abteilung-Daten'
	MIN = 1
	MAX = 1
	PARAMS = set((
	'abkürzung',
	'ehemalige ids',
	'gehört zu',
	'homepage',
	'id',
	'logo',
	'namensraum',
	'text',
	'typ',
	'veraltet'
	))

class KatalogDaten:
	NAME = 'Katalog-Daten'
	MIN = 1
	MAX = 1
	PARAMS = set((
	'1',
	'legacy',
	'plan',
	'text',
	'tiss',
	'veraltet'
	))

def check_template(code, spec):
	templates = code.filter_templates(matches = lambda t: t.name.matches(spec.NAME))
	if hasattr(spec, 'MIN') and len(templates) < spec.MIN:
		yield 'less than {} of the {} template'.format(spec.MIN, spec.NAME)
	if hasattr(spec, 'MAX') and len(templates) < spec.MAX:
		yield 'more than {} of the {} template'.format(spec.MAX, spec.NAME)
	for template in templates:
		unknowns = set([str(p.name).strip() for p in template.params])- spec.PARAMS
		for unknown in unknowns:
			yield 'unknown parameter for template {}: <code><nowiki>{}</nowiki></code>'.format(spec.NAME, str(template.get(unknown)).strip())

report = '{{Sonstiges Leiste}}\nGenerated by ~~~~\n'

def generate_section(name, errors):
	section = '== {} ==\n'.format(name)
	if len(errors) == 0:
		return section + 'No errors found.\n'
	for page in sorted(errors):
		section += '# [[{}]]\n'.format(page)
		for error in sorted(errors[page]):
			section += '#* {}\n'.format(error)
	return section

def catmembers_with_revs(category, **kwargs):
	return site.query('pages', generator='categorymembers', gcmtitle='Category:{}'.format(category),
		prop='revisions', rvprop='content', gcmlimit='max', **kwargs)

errors = collections.defaultdict(list)

for page in catmembers_with_revs('LVAs', gcmnamespace=mwapi.join(vowi.UNI_NAMESPACES)):
	code = mwparserfromhell.parse(page['revisions'][0]['*'])
	for error in check_template(code, LVADaten):
		errors[page['title']].append(error)
report += generate_section('LVAs', errors)
errors.clear()

for page in catmembers_with_revs('Abteilungen'):
	code = mwparserfromhell.parse(page['revisions'][0]['*'])
	for error in check_template(code, AbteilungDaten):
		errors[page['title']].append(error)
report += generate_section('Abteilungen', errors)
errors.clear()

for page in catmembers_with_revs('Kataloge'):
	code = mwparserfromhell.parse(page['revisions'][0]['*'])
	for error in check_template(code, KatalogDaten):
		errors[page['title']].append(error)
report += generate_section('Kataloge', errors)
errors.clear()
mwbot.edit(site, 'VoWi:Report', report, 'update')
